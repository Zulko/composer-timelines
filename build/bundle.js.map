{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../../node_modules/svelte-floating-ui/index.js","../../node_modules/svelte-select/filter.js","../../node_modules/svelte-select/get-items.js","../../node_modules/svelte-select/ChevronIcon.svelte","../../node_modules/svelte-select/ClearIcon.svelte","../../node_modules/svelte-select/LoadingIcon.svelte","../../node_modules/svelte-select/Select.svelte","../../src/components/ComposerSelector.svelte","../../src/components/ComposerEvents.svelte","../../src/components/YearWorldEvents.svelte","../../src/components/YearByYearDisplay.svelte","../../src/components/About.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isTopLayer(currentNode)) {\n      return null;\n    }\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","//@ts-ignore\nimport { arrow as arrowCore } from \"./core\";\nimport { autoUpdate as _autoUpdate, computePosition } from \"./dom/index.js\";\nimport { get } from \"svelte/store\";\nimport { onDestroy, tick } from 'svelte';\nexport function createFloatingActions(initOptions) {\n    let referenceElement;\n    let floatingElement;\n    const defaultOptions = {\n        autoUpdate: true\n    };\n    let options = initOptions;\n    const getOptions = (mixin) => {\n        return { ...defaultOptions, ...(initOptions || {}), ...(mixin || {}) };\n    };\n    const updatePosition = (updateOptions) => {\n        if (referenceElement && floatingElement) {\n            options = getOptions(updateOptions);\n            computePosition(referenceElement, floatingElement, options)\n                .then(v => {\n                Object.assign(floatingElement.style, {\n                    position: v.strategy,\n                    left: `${v.x}px`,\n                    top: `${v.y}px`,\n                });\n                options?.onComputed && options.onComputed(v);\n            });\n        }\n    };\n    const referenceAction = node => {\n        if ('subscribe' in node) {\n            setupVirtualElementObserver(node);\n            return {};\n        }\n        else {\n            referenceElement = node;\n            updatePosition();\n        }\n    };\n    const contentAction = (node, contentOptions) => {\n        let autoUpdateDestroy;\n        floatingElement = node;\n        options = getOptions(contentOptions);\n        setTimeout(() => updatePosition(contentOptions), 0); //tick doesn't work\n        updatePosition(contentOptions);\n        const destroyAutoUpdate = () => {\n            if (autoUpdateDestroy) {\n                autoUpdateDestroy();\n                autoUpdateDestroy = undefined;\n            }\n        };\n        const initAutoUpdate = ({ autoUpdate } = options || {}) => {\n            destroyAutoUpdate();\n            if (autoUpdate !== false) {\n                tick().then(() => {\n                    return _autoUpdate(referenceElement, floatingElement, () => updatePosition(options), (autoUpdate === true ? {} : autoUpdate));\n                });\n            }\n            return;\n        };\n        autoUpdateDestroy = initAutoUpdate();\n        return {\n            update(contentOptions) {\n                updatePosition(contentOptions);\n                autoUpdateDestroy = initAutoUpdate(contentOptions);\n            },\n            destroy() {\n                destroyAutoUpdate();\n            }\n        };\n    };\n    const setupVirtualElementObserver = (node) => {\n        const unsubscribe = node.subscribe(($node) => {\n            if (referenceElement === undefined) {\n                referenceElement = $node;\n                updatePosition();\n            }\n            else {\n                // Preserve the reference to the virtual element.\n                Object.assign(referenceElement, $node);\n                updatePosition();\n            }\n        });\n        onDestroy(unsubscribe);\n    };\n    return [\n        referenceAction,\n        contentAction,\n        updatePosition\n    ];\n}\nexport function arrow(options) {\n    return {\n        name: \"arrow\",\n        options,\n        fn(args) {\n            const element = get(options.element);\n            if (element) {\n                return arrowCore({\n                    element,\n                    padding: options.padding\n                }).fn(args);\n            }\n            return {};\n        }\n    };\n}\n","export default function filter({\n    loadOptions,\n    filterText,\n    items,\n    multiple,\n    value,\n    itemId,\n    groupBy,\n    filterSelectedItems,\n    itemFilter,\n    convertStringItemsToObjects,\n    filterGroupedItems,\n    label,\n}) {\n    if (items && loadOptions) return items;\n    if (!items) return [];\n\n    if (items && items.length > 0 && typeof items[0] !== 'object') {\n        items = convertStringItemsToObjects(items);\n    }\n\n    let filterResults = items.filter((item) => {\n        let matchesFilter = itemFilter(item[label], filterText, item);\n        if (matchesFilter && multiple && value?.length) {\n            matchesFilter = !value.some((x) => {\n                return filterSelectedItems ? x[itemId] === item[itemId] : false;\n            });\n        }\n\n        return matchesFilter;\n    });\n\n    if (groupBy) {\n        filterResults = filterGroupedItems(filterResults);\n    }\n\n    return filterResults;\n}\n","export default async function getItems({ dispatch, loadOptions, convertStringItemsToObjects, filterText }) {\n    let res = await loadOptions(filterText).catch((err) => {\n        console.warn('svelte-select loadOptions error :>> ', err);\n        dispatch('error', { type: 'loadOptions', details: err });\n    });\n\n    if (res && !res.cancelled) {        \n        if (res) {\n            if (res && res.length > 0 && typeof res[0] !== 'object') {\n                res = convertStringItemsToObjects(res);\n            }\n            \n            dispatch('loaded', { items: res });\n        } else {\n            res = [];\n        }\n\n        return {\n            filteredItems: res,\n            loading: false,\n            focused: true,\n            listOpen: true,\n        };\n    }\n}\n","<svg\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    focusable=\"false\"\n    aria-hidden=\"true\">\n    <path\n    fill=\"currentColor\"\n        d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747\n          3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0\n          1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502\n          0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0\n          0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\n</svg>\n\n<style>\n  svg {\n      width: var(--chevron-icon-width, 20px);\n      height: var(--chevron-icon-width, 20px);\n      color: var(--chevron-icon-colour, currentColor);\n  }\n</style>","<svg\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"-2 -2 50 50\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    role=\"presentation\"\n>\n    <path\n        fill=\"currentColor\"\n        d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124\n    l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\"\n    />\n</svg>\n\n<style>\n    svg {\n        width: var(--clear-icon-width, 20px);\n        height: var(--clear-icon-width, 20px);\n        color: var(--clear-icon-color, currentColor);\n    }\n</style>","<svg class=\"loading\" viewBox=\"25 25 50 50\">\n    <circle\n        class=\"circle_path\"\n        cx=\"50\"\n        cy=\"50\"\n        r=\"20\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"5\"\n        stroke-miterlimit=\"10\" />\n</svg>\n\n<style>\n    .loading {\n        width: var(--spinner-width, 20px);\n        height: var(--spinner-height, 20px);\n        color: var(--spinner-color, var(--icons-color));\n        animation: rotate 0.75s linear infinite;\n        transform-origin: center center;\n        transform: none;\n    }\n\n    .circle_path {\n        stroke-dasharray: 90;\n        stroke-linecap: round;\n    }\n\n    @keyframes rotate {\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n</style>","<script>\n    import { beforeUpdate, createEventDispatcher, onDestroy, onMount } from 'svelte';\n    import { offset, flip, shift } from 'svelte-floating-ui/dom';\n    import { createFloatingActions } from 'svelte-floating-ui';\n\n    const dispatch = createEventDispatcher();\n\n    import _filter from './filter';\n    import _getItems from './get-items';\n\n    import ChevronIcon from './ChevronIcon.svelte';\n    import ClearIcon from './ClearIcon.svelte';\n    import LoadingIcon from './LoadingIcon.svelte';\n\n    export let justValue = null; // read-only\n\n    export let filter = _filter;\n    export let getItems = _getItems;\n\n    export let id = null;\n    export let name = null;\n    export let container = undefined;\n    export let input = undefined;\n    export let multiple = false;\n    export let multiFullItemClearable = false;\n    export let disabled = false;\n    export let focused = false;\n    export let value = null;\n    export let filterText = '';\n    export let placeholder = 'Please select';\n    export let placeholderAlwaysShow = false;\n    export let items = null;\n    export let label = 'label';\n    export let itemFilter = (label, filterText, option) => `${label}`.toLowerCase().includes(filterText.toLowerCase());\n    export let groupBy = undefined;\n    export let groupFilter = (groups) => groups;\n    export let groupHeaderSelectable = false;\n    export let itemId = 'value';\n    export let loadOptions = undefined;\n    export let containerStyles = '';\n    export let hasError = false;\n    export let filterSelectedItems = true;\n    export let required = false;\n    export let closeListOnChange = true;\n    export let clearFilterTextOnBlur = true;\n\n    export let createGroupHeaderItem = (groupValue, item) => {\n        return {\n            value: groupValue,\n            [label]: groupValue,\n        };\n    };\n\n    export const getFilteredItems = () => {\n        return filteredItems;\n    };\n\n    export let searchable = true;\n    export let inputStyles = '';\n    export let clearable = true;\n    export let loading = false;\n    export let listOpen = false;\n\n    let timeout;\n    export let debounce = (fn, wait = 1) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(fn, wait);\n    };\n\n    export let debounceWait = 300;\n    export let hideEmptyState = false;\n    export let inputAttributes = {};\n    export let listAutoWidth = true;\n    export let showChevron = false;\n    export let listOffset = 5;\n    export let hoverItemIndex = 0;\n    export let floatingConfig = {};\n\n    export { containerClasses as class };\n\n    let containerClasses = '';\n    let activeValue;\n    let prev_value;\n    let prev_filterText;\n    let prev_multiple;\n\n    function setValue() {\n        if (typeof value === 'string') {\n            let item = (items || []).find((item) => item[itemId] === value);\n            value = item || {\n                [itemId]: value,\n                label: value,\n            };\n        } else if (multiple && Array.isArray(value) && value.length > 0) {\n            value = value.map((item) => (typeof item === 'string' ? { value: item, label: item } : item));\n        }\n    }\n\n    let _inputAttributes;\n    function assignInputAttributes() {\n        _inputAttributes = Object.assign(\n            {\n                autocapitalize: 'none',\n                autocomplete: 'off',\n                autocorrect: 'off',\n                spellcheck: false,\n                tabindex: 0,\n                type: 'text',\n                'aria-autocomplete': 'list',\n            },\n            inputAttributes\n        );\n\n        if (id) {\n            _inputAttributes['id'] = id;\n        }\n\n        if (!searchable) {\n            _inputAttributes['readonly'] = true;\n        }\n    }\n\n    function convertStringItemsToObjects(_items) {\n        return _items.map((item, index) => {\n            return {\n                index,\n                value: item,\n                label: `${item}`,\n            };\n        });\n    }\n\n    function filterGroupedItems(_items) {\n        const groupValues = [];\n        const groups = {};\n\n        _items.forEach((item) => {\n            const groupValue = groupBy(item);\n\n            if (!groupValues.includes(groupValue)) {\n                groupValues.push(groupValue);\n                groups[groupValue] = [];\n\n                if (groupValue) {\n                    groups[groupValue].push(\n                        Object.assign(createGroupHeaderItem(groupValue, item), {\n                            id: groupValue,\n                            groupHeader: true,\n                            selectable: groupHeaderSelectable,\n                        })\n                    );\n                }\n            }\n\n            groups[groupValue].push(Object.assign({ groupItem: !!groupValue }, item));\n        });\n\n        const sortedGroupedItems = [];\n\n        groupFilter(groupValues).forEach((groupValue) => {\n            if (groups[groupValue]) sortedGroupedItems.push(...groups[groupValue]);\n        });\n\n        return sortedGroupedItems;\n    }\n\n    function dispatchSelectedItem() {\n        if (multiple) {\n            if (JSON.stringify(value) !== JSON.stringify(prev_value)) {\n                if (checkValueForDuplicates()) {\n                    dispatch('input', value);\n                }\n            }\n            return;\n        }\n\n        if (!prev_value || JSON.stringify(value[itemId]) !== JSON.stringify(prev_value[itemId])) {\n            dispatch('input', value);\n        }\n    }\n\n    function setupMulti() {\n        if (value) {\n            if (Array.isArray(value)) {\n                value = [...value];\n            } else {\n                value = [value];\n            }\n        }\n    }\n\n    function setupSingle() {\n        if (value) value = null;\n    }\n\n    $: if ((items, value)) setValue();\n    $: if (inputAttributes || !searchable) assignInputAttributes();\n    $: if (multiple) setupMulti();\n    $: if (prev_multiple && !multiple) setupSingle();\n    $: if (multiple && value && value.length > 1) checkValueForDuplicates();\n    $: if (value) dispatchSelectedItem();\n    $: if (!value && multiple && prev_value) dispatch('input', value);\n    $: if (!focused && input) closeList();\n    $: if (filterText !== prev_filterText) setupFilterText();\n    $: if (!multiple && listOpen && value && filteredItems) setValueIndexAsHoverIndex();\n    $: dispatchHover(hoverItemIndex);\n\n    function setValueIndexAsHoverIndex() {\n        const valueIndex = filteredItems.findIndex((i) => {\n            return i[itemId] === value[itemId];\n        });\n\n        checkHoverSelectable(valueIndex, true);\n    }\n\n    function dispatchHover(i) {\n        dispatch('hoverItem', i);\n    }\n\n    function checkHoverSelectable(startingIndex = 0, ignoreGroup) {\n        hoverItemIndex = startingIndex < 0 ? 0 : startingIndex;\n        if (!ignoreGroup && groupBy && filteredItems[hoverItemIndex] && !filteredItems[hoverItemIndex].selectable) {\n            setHoverIndex(1);\n        }\n    }\n\n    function setupFilterText() {\n        if (!loadOptions && filterText.length === 0) return;\n\n        if (loadOptions) {\n            debounce(async function () {\n                loading = true;\n                let res = await getItems({\n                    dispatch,\n                    loadOptions,\n                    convertStringItemsToObjects,\n                    filterText,\n                });\n\n                if (res) {\n                    loading = res.loading;\n                    listOpen = listOpen ? res.listOpen : filterText.length > 0 ? true : false;\n                    focused = listOpen && res.focused;\n                    items = groupBy ? filterGroupedItems(res.filteredItems) : res.filteredItems;\n                } else {\n                    loading = false;\n                    focused = true;\n                    listOpen = true;\n                }\n            }, debounceWait);\n        } else {\n            listOpen = true;\n\n            if (multiple) {\n                activeValue = undefined;\n            }\n        }\n    }\n\n    $: hasValue = multiple ? value && value.length > 0 : value;\n    $: hideSelectedItem = hasValue && filterText.length > 0;\n    $: showClear = hasValue && clearable && !disabled && !loading;\n    $: placeholderText =\n        placeholderAlwaysShow && multiple\n            ? placeholder\n            : multiple && value?.length === 0\n            ? placeholder\n            : value\n            ? ''\n            : placeholder;\n    $: ariaSelection = value ? handleAriaSelection(multiple) : '';\n    $: ariaContext = handleAriaContent({ filteredItems, hoverItemIndex, focused, listOpen });\n    $: updateValueDisplay(items);\n    $: justValue = computeJustValue(multiple, value, itemId);\n    $: if (!multiple && prev_value && !value) dispatch('input', value);\n    $: filteredItems = filter({\n        loadOptions,\n        filterText,\n        items,\n        multiple,\n        value,\n        itemId,\n        groupBy,\n        label,\n        filterSelectedItems,\n        itemFilter,\n        convertStringItemsToObjects,\n        filterGroupedItems,\n    });\n    $: if (listOpen && filteredItems && !multiple && !value) checkHoverSelectable();\n    $: handleFilterEvent(filteredItems);\n    $: if (container && floatingConfig) floatingUpdate(Object.assign(_floatingConfig, floatingConfig));\n    $: listDom = !!list;\n    $: listMounted(list, listOpen);\n    $: if (listOpen && container && list) setListWidth();\n    $: scrollToHoverItem = hoverItemIndex;\n    $: if (listOpen && multiple) hoverItemIndex = 0;\n    $: if (input && listOpen && !focused) handleFocus();\n    $: if (filterText) hoverItemIndex = 0;\n\n    function handleFilterEvent(items) {\n        if (listOpen) dispatch('filter', items);\n    }\n\n    beforeUpdate(async () => {\n        prev_value = value;\n        prev_filterText = filterText;\n        prev_multiple = multiple;\n    });\n\n    function computeJustValue() {\n        if (multiple) return value ? value.map((item) => item[itemId]) : null;\n        return value ? value[itemId] : value;\n    }\n\n    function checkValueForDuplicates() {\n        let noDuplicates = true;\n        if (value) {\n            const ids = [];\n            const uniqueValues = [];\n\n            value.forEach((val) => {\n                if (!ids.includes(val[itemId])) {\n                    ids.push(val[itemId]);\n                    uniqueValues.push(val);\n                } else {\n                    noDuplicates = false;\n                }\n            });\n\n            if (!noDuplicates) value = uniqueValues;\n        }\n        return noDuplicates;\n    }\n\n    function findItem(selection) {\n        let matchTo = selection ? selection[itemId] : value[itemId];\n        return items.find((item) => item[itemId] === matchTo);\n    }\n\n    function updateValueDisplay(items) {\n        if (!items || items.length === 0 || items.some((item) => typeof item !== 'object')) return;\n        if (!value || (multiple ? value.some((selection) => !selection || !selection[itemId]) : !value[itemId])) return;\n\n        if (Array.isArray(value)) {\n            value = value.map((selection) => findItem(selection) || selection);\n        } else {\n            value = findItem() || value;\n        }\n    }\n\n    async function handleMultiItemClear(i) {\n        const itemToRemove = value[i];\n\n        if (value.length === 1) {\n            value = undefined;\n        } else {\n            value = value.filter((item) => {\n                return item !== itemToRemove;\n            });\n        }\n\n        dispatch('clear', itemToRemove);\n    }\n\n    function handleKeyDown(e) {\n        if (!focused) return;\n        e.stopPropagation();\n        switch (e.key) {\n            case 'Escape':\n                e.preventDefault();\n                closeList();\n                break;\n            case 'Enter':\n                e.preventDefault();\n\n                if (listOpen) {\n                    if (filteredItems.length === 0) break;\n                    const hoverItem = filteredItems[hoverItemIndex];\n\n                    if (value && !multiple && value[itemId] === hoverItem[itemId]) {\n                        closeList();\n                        break;\n                    } else {\n                        handleSelect(filteredItems[hoverItemIndex]);\n                    }\n                }\n\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n\n                if (listOpen) {\n                    setHoverIndex(1);\n                } else {\n                    listOpen = true;\n                    activeValue = undefined;\n                }\n\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n\n                if (listOpen) {\n                    setHoverIndex(-1);\n                } else {\n                    listOpen = true;\n                    activeValue = undefined;\n                }\n\n                break;\n            case 'Tab':\n                if (listOpen && focused) {\n                    if (\n                        filteredItems.length === 0 ||\n                        (value && value[itemId] === filteredItems[hoverItemIndex][itemId])\n                    )\n                        return closeList();\n\n                    e.preventDefault();\n                    handleSelect(filteredItems[hoverItemIndex]);\n                    closeList();\n                }\n\n                break;\n            case 'Backspace':\n                if (!multiple || filterText.length > 0) return;\n\n                if (multiple && value && value.length > 0) {\n                    handleMultiItemClear(activeValue !== undefined ? activeValue : value.length - 1);\n                    if (activeValue === 0 || activeValue === undefined) break;\n                    activeValue = value.length > activeValue ? activeValue - 1 : undefined;\n                }\n\n                break;\n            case 'ArrowLeft':\n                if (!value || !multiple || filterText.length > 0) return;\n                if (activeValue === undefined) {\n                    activeValue = value.length - 1;\n                } else if (value.length > activeValue && activeValue !== 0) {\n                    activeValue -= 1;\n                }\n                break;\n            case 'ArrowRight':\n                if (!value || !multiple || filterText.length > 0 || activeValue === undefined) return;\n                if (activeValue === value.length - 1) {\n                    activeValue = undefined;\n                } else if (activeValue < value.length - 1) {\n                    activeValue += 1;\n                }\n                break;\n        }\n    }\n\n    function handleFocus(e) {\n        if (focused && input === document?.activeElement) return;\n        if (e) dispatch('focus', e);\n        input?.focus();\n        focused = true;\n    }\n\n    async function handleBlur(e) {\n        if (isScrolling) return;\n        if (listOpen || focused) {\n            dispatch('blur', e);\n            closeList();\n            focused = false;\n            activeValue = undefined;\n            input?.blur();\n        }\n    }\n\n    function handleClick() {\n        if (disabled) return;\n        if (filterText.length > 0) return listOpen = true;\n        listOpen = !listOpen;\n    }\n\n    export function handleClear() {\n        dispatch('clear', value);\n        value = undefined;\n        closeList();\n        handleFocus();\n    }\n\n    onMount(() => {\n        if (listOpen) focused = true;\n        if (focused && input) input.focus();\n    });\n\n    function itemSelected(selection) {\n        if (selection) {\n            filterText = '';\n            const item = Object.assign({}, selection);\n\n            if (item.groupHeader && !item.selectable) return;\n            value = multiple ? (value ? value.concat([item]) : [item]) : (value = item);\n\n            setTimeout(() => {\n                if (closeListOnChange) closeList();\n                activeValue = undefined;\n                dispatch('change', value);\n                dispatch('select', selection);\n            });\n        }\n    }\n\n    function closeList() {\n        if (clearFilterTextOnBlur) {\n            filterText = '';\n        }\n        listOpen = false;\n    }\n\n    export let ariaValues = (values) => {\n        return `Option ${values}, selected.`;\n    };\n\n    export let ariaListOpen = (label, count) => {\n        return `You are currently focused on option ${label}. There are ${count} results available.`;\n    };\n\n    export let ariaFocused = () => {\n        return `Select is focused, type to refine list, press down to open the menu.`;\n    };\n\n    function handleAriaSelection(_multiple) {\n        let selected = undefined;\n\n        if (_multiple && value.length > 0) {\n            selected = value.map((v) => v[label]).join(', ');\n        } else {\n            selected = value[label];\n        }\n\n        return ariaValues(selected);\n    }\n\n    function handleAriaContent() {\n        if (!filteredItems || filteredItems.length === 0) return '';\n        let _item = filteredItems[hoverItemIndex];\n        if (listOpen && _item) {\n            let count = filteredItems ? filteredItems.length : 0;\n            return ariaListOpen(_item[label], count);\n        } else {\n            return ariaFocused();\n        }\n    }\n\n    let list = null;\n\n    let isScrollingTimer;\n    function handleListScroll() {\n        clearTimeout(isScrollingTimer);\n        isScrollingTimer = setTimeout(() => {\n            isScrolling = false;\n        }, 100);\n    }\n\n    function handleClickOutside(event) {\n        if (!listOpen && !focused && container && !container.contains(event.target) && !list?.contains(event.target)) {\n            handleBlur();\n        }\n    }\n\n    onDestroy(() => {\n        list?.remove();\n    });\n\n    let isScrolling = false;\n\n    function handleSelect(item) {\n        if (!item || item.selectable === false) return;\n        itemSelected(item);\n    }\n\n    function handleHover(i) {\n        if (isScrolling) return;\n        hoverItemIndex = i;\n    }\n\n    function handleItemClick(args) {\n        const { item, i } = args;\n        if (item?.selectable === false) return;\n        if (value && !multiple && value[itemId] === item[itemId]) return closeList();\n        if (isItemSelectable(item)) {\n            hoverItemIndex = i;\n            handleSelect(item);\n        }\n    }\n\n    function setHoverIndex(increment) {\n        let selectableFilteredItems = filteredItems.filter(\n            (item) => !Object.hasOwn(item, 'selectable') || item.selectable === true\n        );\n\n        if (selectableFilteredItems.length === 0) {\n            return (hoverItemIndex = 0);\n        }\n\n        if (increment > 0 && hoverItemIndex === filteredItems.length - 1) {\n            hoverItemIndex = 0;\n        } else if (increment < 0 && hoverItemIndex === 0) {\n            hoverItemIndex = filteredItems.length - 1;\n        } else {\n            hoverItemIndex = hoverItemIndex + increment;\n        }\n\n        const hover = filteredItems[hoverItemIndex];\n\n        if (hover && hover.selectable === false) {\n            if (increment === 1 || increment === -1) setHoverIndex(increment);\n            return;\n        }\n    }\n\n    function isItemActive(item, value, itemId) {\n        if (multiple) return;\n        return value && value[itemId] === item[itemId];\n    }\n\n    function isItemFirst(itemIndex) {\n        return itemIndex === 0;\n    }\n\n    function isItemSelectable(item) {\n        return (item.groupHeader && item.selectable) || item.selectable || !item.hasOwnProperty('selectable');\n    }\n\n    const activeScroll = scrollAction;\n    const hoverScroll = scrollAction;\n\n    function scrollAction(node) {\n        return {\n            update(args) {\n                if (args.scroll) {\n                    handleListScroll();\n                    node.scrollIntoView({ behavior: 'auto', block: 'nearest' });\n                }\n            },\n        };\n    }\n\n    function setListWidth() {\n        const { width } = container.getBoundingClientRect();\n        list.style.width = listAutoWidth ? width + 'px' : 'auto';\n    }\n\n    let _floatingConfig = {\n        strategy: 'absolute',\n        placement: 'bottom-start',\n        middleware: [offset(listOffset), flip(), shift()],\n        autoUpdate: false,\n    };\n\n    const [floatingRef, floatingContent, floatingUpdate] = createFloatingActions(_floatingConfig);\n\n    $: if (container && floatingConfig?.autoUpdate === undefined) {\n        _floatingConfig.autoUpdate = true;\n    }\n\n    let prefloat = true;\n    function listMounted(list, listOpen) {\n        if (!list || !listOpen) return (prefloat = true);\n        setTimeout(() => {\n            prefloat = false;\n        }, 0);\n    }\n</script>\n\n<svelte:window on:click={handleClickOutside} on:keydown={handleKeyDown} />\n\n<div\n    class=\"svelte-select {containerClasses}\"\n    class:multi={multiple}\n    class:disabled\n    class:focused\n    class:list-open={listOpen}\n    class:show-chevron={showChevron}\n    class:error={hasError}\n    style={containerStyles}\n    on:pointerup|preventDefault={handleClick}\n    bind:this={container}\n    use:floatingRef\n    role=\"none\">\n    {#if listOpen}\n        <div\n            use:floatingContent\n            bind:this={list}\n            class=\"svelte-select-list\"\n            class:prefloat\n            on:scroll={handleListScroll}\n            on:pointerup|preventDefault|stopPropagation\n            on:mousedown|preventDefault|stopPropagation\n\t\t\trole=\"none\">\n            {#if $$slots['list-prepend']}<slot name=\"list-prepend\" />{/if}\n            {#if $$slots.list}<slot name=\"list\" {filteredItems} />\n            {:else if filteredItems.length > 0}\n                {#each filteredItems as item, i}\n                    <div\n                        on:mouseover={() => handleHover(i)}\n                        on:focus={() => handleHover(i)}\n                        on:click|stopPropagation={() => handleItemClick({ item, i })}\n                        on:keydown|preventDefault|stopPropagation\n                        class=\"list-item\"\n                        tabindex=\"-1\"\n                        role=\"none\">\n                        <div\n                            use:activeScroll={{ scroll: isItemActive(item, value, itemId), listDom }}\n                            use:hoverScroll={{ scroll: scrollToHoverItem === i, listDom }}\n                            class=\"item\"\n                            class:list-group-title={item.groupHeader}\n                            class:active={isItemActive(item, value, itemId)}\n                            class:first={isItemFirst(i)}\n                            class:hover={hoverItemIndex === i}\n                            class:group-item={item.groupItem}\n                            class:not-selectable={item?.selectable === false}>\n                            <slot name=\"item\" {item} index={i}>\n                                {item?.[label]}\n                            </slot>\n                        </div>\n                    </div>\n                {/each}\n            {:else if !hideEmptyState}\n                <slot name=\"empty\">\n                    <div class=\"empty\">No options</div>\n                </slot>\n            {/if}\n            {#if $$slots['list-append']}<slot name=\"list-append\" />{/if}\n        </div>\n    {/if}\n\n    <span aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"additions text\" class=\"a11y-text\">\n        {#if focused}\n            <span id=\"aria-selection\">{ariaSelection}</span>\n            <span id=\"aria-context\">\n                {ariaContext}\n            </span>\n        {/if}\n    </span>\n\n    <div class=\"prepend\">\n        <slot name=\"prepend\" />\n    </div>\n\n    <div class=\"value-container\">\n        {#if hasValue}\n            {#if multiple}\n                {#each value as item, i}\n                    <div\n                        class=\"multi-item\"\n                        class:active={activeValue === i}\n                        class:disabled\n                        on:click|preventDefault={() => (multiFullItemClearable ? handleMultiItemClear(i) : {})}\n                        on:keydown|preventDefault|stopPropagation\n                        role=\"none\">\n                        <span class=\"multi-item-text\">\n                            <slot name=\"selection\" selection={item} index={i}>\n                                {item[label]}\n                            </slot>\n                        </span>\n\n                        {#if !disabled && !multiFullItemClearable && ClearIcon}\n                            <div\n                                class=\"multi-item-clear\"\n                                on:pointerup|preventDefault|stopPropagation={() => handleMultiItemClear(i)}>\n                                <slot name=\"multi-clear-icon\">\n                                    <ClearIcon />\n                                </slot>\n                            </div>\n                        {/if}\n                    </div>\n                {/each}\n            {:else}\n                <div class=\"selected-item\" class:hide-selected-item={hideSelectedItem}>\n                    <slot name=\"selection\" selection={value}>\n                        {value[label]}\n                    </slot>\n                </div>\n            {/if}\n        {/if}\n\n        <input\n            on:keydown={handleKeyDown}\n            on:blur={handleBlur}\n            on:focus={handleFocus}\n            readOnly={!searchable}\n            {..._inputAttributes}\n            bind:this={input}\n            bind:value={filterText}\n            placeholder={placeholderText}\n            style={inputStyles}\n            {disabled} />\n    </div>\n\n    <div class=\"indicators\">\n        {#if loading}\n            <div class=\"icon loading\" aria-hidden=\"true\">\n                <slot name=\"loading-icon\">\n                    <LoadingIcon />\n                </slot>\n            </div>\n        {/if}\n\n        {#if showClear}\n            <button type=\"button\" class=\"icon clear-select\" on:click={handleClear}>\n                <slot name=\"clear-icon\">\n                    <ClearIcon />\n                </slot>\n            </button>\n        {/if}\n\n        {#if showChevron}\n            <div class=\"icon chevron\" aria-hidden=\"true\">\n                <slot name=\"chevron-icon\" {listOpen}>\n                    <ChevronIcon />\n                </slot>\n            </div>\n        {/if}\n    </div>\n\n    <slot name=\"input-hidden\" {value}>\n        <input {name} type=\"hidden\" value={value ? JSON.stringify(value) : null} />\n    </slot>\n\n    {#if required && (!value || value.length === 0)}\n        <slot name=\"required\" {value}>\n            <select class=\"required\" required tabindex=\"-1\" aria-hidden=\"true\" />\n        </slot>\n    {/if}\n</div>\n\n<style>\n    .svelte-select {\n        /* deprecating camelCase custom props in favour of kebab-case for v5 */\n        --borderRadius: var(--border-radius);\n        --clearSelectColor: var(--clear-select-color);\n        --clearSelectWidth: var(--clear-select-width);\n        --disabledBackground: var(--disabled-background);\n        --disabledBorderColor: var(--disabled-border-color);\n        --disabledColor: var(--disabled-color);\n        --disabledPlaceholderColor: var(--disabled-placeholder-color);\n        --disabledPlaceholderOpacity: var(--disabled-placeholder-opacity);\n        --errorBackground: var(--error-background);\n        --errorBorder: var(--error-border);\n        --groupItemPaddingLeft: var(--group-item-padding-left);\n        --groupTitleColor: var(--group-title-color);\n        --groupTitleFontSize: var(--group-title-font-size);\n        --groupTitleFontWeight: var(--group-title-font-weight);\n        --groupTitlePadding: var(--group-title-padding);\n        --groupTitleTextTransform: var(--group-title-text-transform);\n        --groupTitleBorderColor: var(--group-title-border-color);\n        --groupTitleBorderWidth: var(--group-title-border-width);\n        --groupTitleBorderStyle: var(--group-title-border-style);\n        --indicatorColor: var(--chevron-color);\n        --indicatorHeight: var(--chevron-height);\n        --indicatorWidth: var(--chevron-width);\n        --inputColor: var(--input-color);\n        --inputLeft: var(--input-left);\n        --inputLetterSpacing: var(--input-letter-spacing);\n        --inputMargin: var(--input-margin);\n        --inputPadding: var(--input-padding);\n        --itemActiveBackground: var(--item-active-background);\n        --itemColor: var(--item-color);\n        --itemFirstBorderRadius: var(--item-first-border-radius);\n        --itemHoverBG: var(--item-hover-bg);\n        --itemHoverColor: var(--item-hover-color);\n        --itemIsActiveBG: var(--item-is-active-bg);\n        --itemIsActiveColor: var(--item-is-active-color);\n        --itemIsNotSelectableColor: var(--item-is-not-selectable-color);\n        --itemPadding: var(--item-padding);\n        --listBackground: var(--list-background);\n        --listBorder: var(--list-border);\n        --listBorderRadius: var(--list-border-radius);\n        --listEmptyColor: var(--list-empty-color);\n        --listEmptyPadding: var(--list-empty-padding);\n        --listEmptyTextAlign: var(--list-empty-text-align);\n        --listMaxHeight: var(--list-max-height);\n        --listPosition: var(--list-position);\n        --listShadow: var(--list-shadow);\n        --listZIndex: var(--list-z-index);\n        --multiItemBG: var(--multi-item-bg);\n        --multiItemBorderRadius: var(--multi-item-border-radius);\n        --multiItemDisabledHoverBg: var(--multi-item-disabled-hover-bg);\n        --multiItemDisabledHoverColor: var(--multi-item-disabled-hover-color);\n        --multiItemHeight: var(--multi-item-height);\n        --multiItemMargin: var(--multi-item-margin);\n        --multiItemPadding: var(--multi-item-padding);\n        --multiSelectInputMargin: var(--multi-select-input-margin);\n        --multiSelectInputPadding: var(--multi-select-input-padding);\n        --multiSelectPadding: var(--multi-select-padding);\n        --placeholderColor: var(--placeholder-color);\n        --placeholderOpacity: var(--placeholder-opacity);\n        --selectedItemPadding: var(--selected-item-padding);\n        --spinnerColor: var(--spinner-color);\n        --spinnerHeight: var(--spinner-height);\n        --spinnerWidth: var(--spinner-width);\n\n        --internal-padding: 0 0 0 16px;\n\n        border: var(--border, 1px solid #d8dbdf);\n        border-radius: var(--border-radius, 6px);\n        min-height: var(--height, 42px);\n        position: relative;\n        display: flex;\n        align-items: stretch;\n        padding: var(--padding, var(--internal-padding));\n        background: var(--background, #fff);\n        margin: var(--margin, 0);\n        width: var(--width, 100%);\n        font-size: var(--font-size, 16px);\n        max-height: var(--max-height);\n    }\n\n    * {\n        box-sizing: var(--box-sizing, border-box);\n    }\n\n    .svelte-select:hover {\n        border: var(--border-hover, 1px solid #b2b8bf);\n    }\n\n    .value-container {\n        display: flex;\n        flex: 1 1 0%;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: 5px 10px;\n        padding: var(--value-container-padding, 5px 0);\n        position: relative;\n        overflow: var(--value-container-overflow, hidden);\n        align-self: stretch;\n    }\n\n    .prepend,\n    .indicators {\n        display: flex;\n        flex-shrink: 0;\n        align-items: center;\n    }\n\n    .indicators {\n        position: var(--indicators-position);\n        top: var(--indicators-top);\n        right: var(--indicators-right);\n        bottom: var(--indicators-bottom);\n    }\n\n    input {\n        position: absolute;\n        cursor: default;\n        border: none;\n        color: var(--input-color, var(--item-color));\n        padding: var(--input-padding, 0);\n        letter-spacing: var(--input-letter-spacing, inherit);\n        margin: var(--input-margin, 0);\n        min-width: 10px;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background: transparent;\n        font-size: var(--font-size, 16px);\n    }\n\n    :not(.multi) > .value-container > input {\n        width: 100%;\n        height: 100%;\n    }\n\n    input::placeholder {\n        color: var(--placeholder-color, #78848f);\n        opacity: var(--placeholder-opacity, 1);\n    }\n\n    input:focus {\n        outline: none;\n    }\n\n    .svelte-select.focused {\n        border: var(--border-focused, 1px solid #006fe8);\n        border-radius: var(--border-radius-focused, var(--border-radius, 6px));\n    }\n\n    .disabled {\n        background: var(--disabled-background, #ebedef);\n        border-color: var(--disabled-border-color, #ebedef);\n        color: var(--disabled-color, #c1c6cc);\n    }\n\n    .disabled input::placeholder {\n        color: var(--disabled-placeholder-color, #c1c6cc);\n        opacity: var(--disabled-placeholder-opacity, 1);\n    }\n\n    .selected-item {\n        position: relative;\n        overflow: var(--selected-item-overflow, hidden);\n        padding: var(--selected-item-padding, 0 20px 0 0);\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        color: var(--selected-item-color, inherit);\n        font-size: var(--font-size, 16px);\n    }\n\n    .multi .selected-item {\n        position: absolute;\n        line-height: var(--height, 42px);\n        height: var(--height, 42px);\n    }\n\n    .selected-item:focus {\n        outline: none;\n    }\n\n    .hide-selected-item {\n        opacity: 0;\n    }\n\n    .icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .clear-select {\n        all: unset;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: var(--clear-select-width, 40px);\n        height: var(--clear-select-height, 100%);\n        color: var(--clear-select-color, var(--icons-color));\n        margin: var(--clear-select-margin, 0);\n        pointer-events: all;\n        flex-shrink: 0;\n    }\n\n    .clear-select:focus {\n        outline: var(--clear-select-focus-outline, 1px solid #006fe8);\n    }\n\n    .loading {\n        width: var(--loading-width, 40px);\n        height: var(--loading-height);\n        color: var(--loading-color, var(--icons-color));\n        margin: var(--loading--margin, 0);\n        flex-shrink: 0;\n    }\n\n    .chevron {\n        width: var(--chevron-width, 40px);\n        height: var(--chevron-height, 40px);\n        background: var(--chevron-background, transparent);\n        pointer-events: var(--chevron-pointer-events, none);\n        color: var(--chevron-color, var(--icons-color));\n        border: var(--chevron-border, 0 0 0 1px solid #d8dbdf);\n        flex-shrink: 0;\n    }\n\n    .multi {\n        padding: var(--multi-select-padding, var(--internal-padding));\n    }\n\n    .multi input {\n        padding: var(--multi-select-input-padding, 0);\n        position: relative;\n        margin: var(--multi-select-input-margin, 5px 0);\n        flex: 1 1 40px;\n    }\n\n    .svelte-select.error {\n        border: var(--error-border, 1px solid #ff2d55);\n        background: var(--error-background, #fff);\n    }\n\n    .a11y-text {\n        z-index: 9999;\n        border: 0px;\n        clip: rect(1px, 1px, 1px, 1px);\n        height: 1px;\n        width: 1px;\n        position: absolute;\n        overflow: hidden;\n        padding: 0px;\n        white-space: nowrap;\n    }\n\n    .multi-item {\n        background: var(--multi-item-bg, #ebedef);\n        margin: var(--multi-item-margin, 0);\n        outline: var(--multi-item-outline, 1px solid #ddd);\n        border-radius: var(--multi-item-border-radius, 4px);\n        height: var(--multi-item-height, 25px);\n        line-height: var(--multi-item-height, 25px);\n        display: flex;\n        cursor: default;\n        padding: var(--multi-item-padding, 0 5px);\n        overflow: hidden;\n        gap: var(--multi-item-gap, 4px);\n        outline-offset: -1px;\n        max-width: var(--multi-max-width, none);\n        color: var(--multi-item-color, var(--item-color));\n    }\n\n    .multi-item.disabled:hover {\n        background: var(--multi-item-disabled-hover-bg, #ebedef);\n        color: var(--multi-item-disabled-hover-color, #c1c6cc);\n    }\n\n    .multi-item-text {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n\n    .multi-item-clear {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        --clear-icon-color: var(--multi-item-clear-icon-color, #000);\n    }\n\n    .multi-item.active {\n        outline: var(--multi-item-active-outline, 1px solid #006fe8);\n    }\n\n    .svelte-select-list {\n        box-shadow: var(--list-shadow, 0 2px 3px 0 rgba(44, 62, 80, 0.24));\n        border-radius: var(--list-border-radius, 4px);\n        max-height: var(--list-max-height, 252px);\n        overflow-y: auto;\n        background: var(--list-background, #fff);\n        position: var(--list-position, absolute);\n        z-index: var(--list-z-index, 2);\n        border: var(--list-border);\n    }\n\n    .prefloat {\n        opacity: 0;\n        pointer-events: none;\n    }\n\n    .list-group-title {\n        color: var(--group-title-color, #8f8f8f);\n        cursor: default;\n        font-size: var(--group-title-font-size, 16px);\n        font-weight: var(--group-title-font-weight, 600);\n        height: var(--height, 42px);\n        line-height: var(--height, 42px);\n        padding: var(--group-title-padding, 0 20px);\n        text-overflow: ellipsis;\n        overflow-x: hidden;\n        white-space: nowrap;\n        text-transform: var(--group-title-text-transform, uppercase);\n        border-width: var(--group-title-border-width, medium);\n        border-style: var(--group-title-border-style, none);\n        border-color: var(--group-title-border-color, color);\n    }\n\n    .empty {\n        text-align: var(--list-empty-text-align, center);\n        padding: var(--list-empty-padding, 20px 0);\n        color: var(--list-empty-color, #78848f);\n    }\n\n    .item {\n        cursor: default;\n        height: var(--item-height, var(--height, 42px));\n        line-height: var(--item-line-height, var(--height, 42px));\n        padding: var(--item-padding, 0 20px);\n        color: var(--item-color, inherit);\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n        transition: var(--item-transition, all 0.2s);\n        align-items: center;\n        width: 100%;\n    }\n\n    .item.group-item {\n        padding-left: var(--group-item-padding-left, 40px);\n    }\n\n    .item:active {\n        background: var(--item-active-background, #b9daff);\n    }\n\n    .item.active {\n        background: var(--item-is-active-bg, #007aff);\n        color: var(--item-is-active-color, #fff);\n    }\n\n    .item.first {\n        border-radius: var(--item-first-border-radius, 4px 4px 0 0);\n    }\n\n    .item.hover:not(.active) {\n        background: var(--item-hover-bg, #e7f2ff);\n        color: var(--item-hover-color, inherit);\n    }\n\n    .item.not-selectable,\n    .item.hover.item.not-selectable,\n    .item.active.item.not-selectable,\n    .item.not-selectable:active {\n        color: var(--item-is-not-selectable-color, #999);\n        background: transparent;\n    }\n\n    .required {\n        opacity: 0;\n        z-index: -1;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n    }\n</style>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  import Select from \"svelte-select\";\n\n  export let composerListWithMetadata = [];\n\n  const dispatch = createEventDispatcher();\n\n  function handleChange(selectedOptions) {\n    const selectedComposers = selectedOptions.map((option) => option.value);\n    dispatch(\"selectionChange\", selectedComposers);\n  }\n\n  function handleUnselect(unselected) {\n    dispatch(\"unselected\", unselected.value);\n  }\n</script>\n\n<Select\n  items={composerListWithMetadata\n    .sort((composer) => composer.last_name)\n    .map((composer) => ({\n      label: `${composer.last_name}, ${composer.first_names}`,\n      value: composer.full_name,\n    }))}\n  multiple={true}\n  on:change={(e) => handleChange(e.detail)}\n  on:clear={(e) => handleUnselect(e.detail)}\n  placeholder=\"Select composers\"\n/>\n","<script>\n  export let composerData;\n  export let showWorks = true;\n  export let showLifeEvents = true;\n\n  function youtubeSearchTerm(composition) {\n    return encodeURIComponent(composerData.last_name + \" \" + composition.title);\n  }\n</script>\n\n<div class=\"composer-events\">\n  {#if composerData.events.length > 0 || composerData.compositions.length > 0}\n    <h3>\n      <a\n        href={composerData.wikipedia_url}\n        class=\"icon\"\n        target=\"_blank\"\n        title=\"Go to Wikipedia\"\n      >\n        <i class=\"fab fa-wikipedia-w\"></i>\n      </a>\n      {composerData.full_name}\n    </h3>\n  {/if}\n  {#if showLifeEvents}\n    <ul>\n      {#each composerData.events as event}\n        <li class=\"event-icon\">\n          <b>{event.event} ({event.city}, {event.country})</b>\n          {event.summary}\n        </li>\n      {/each}\n    </ul>\n  {/if}\n  {#if showWorks}\n    <ul class=\"works\">\n      {#each composerData.compositions as composition}\n        <li>\n          <a\n            href={composition.imslp_url}\n            class=\"icon\"\n            target=\"_blank\"\n            title=\"IMSLP link\"\n          >\n            <i class=\"fas fa-file-pdf\"></i>\n          </a>\n          <a\n            href=\"https://www.youtube.com/results?search_query={youtubeSearchTerm(\n              composition\n            )}\"\n            class=\"icon\"\n            target=\"_blank\"\n            title=\"Search YouTube\"\n          >\n            <i class=\"fab fa-youtube\"></i>\n          </a>\n          <!-- <a\n            href=\"https://open.spotify.com/search/{youtubeSearchTerm(\n              composition\n            )}\"\n            class=\"icon\"\n            target=\"_blank\"\n            title=\"Search Spotify\"\n          >\n            <i class=\"fab fa-spotify\"></i>\n          </a> -->\n          {composition.title}\n        </li>\n      {/each}\n    </ul>\n  {/if}\n</div>\n\n<style>\n  .composer-events ul {\n    list-style-type: none;\n    padding: 0;\n  }\n\n  .composer-events li {\n    margin-bottom: 10px;\n    padding-left: 25px; /* Adjust padding to accommodate the icon */\n    position: relative;\n  }\n\n  /* Icon for events */\n  .composer-events .event-icon::before {\n    content: \"\\f1ea\"; /* Unicode for Font Awesome 'book' icon */\n    font-family: \"Font Awesome 5 Free\";\n    font-weight: 900; /* Font Awesome free icons have a font-weight of 900 */\n    position: absolute;\n    left: 0;\n    top: 0;\n    font-size: 1rem;\n    color: #555;\n  }\n\n  /* Icon for compositions */\n</style>\n","<script>\n  export let events;\n</script>\n\n<div class=\"world-events\">\n  {#if events.length > 0}\n    <h3>\n      <a\n        href=\"https://en.wikipedia.org/wiki/{events[0].year}\"\n        class=\"icon\"\n        target=\"_blank\"\n        title=\"Go to Wikipedia\"\n      >\n        <i class=\"fab fa-wikipedia-w\"></i>\n      </a>\n      In the world...\n    </h3>\n  {/if}\n  <ul>\n    {#each events as event}\n      <li class=\"event-icon\">\n        <b>{event.event} ({event.city}, {event.country})</b>\n        {event.summary}\n      </li>\n    {/each}\n  </ul>\n</div>\n\n<style>\n  .world-events {\n    color: gray;\n  }\n\n  .event {\n    margin-bottom: 15px;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #f9f9f9;\n  }\n\n  .event h4 {\n    margin: 0 0 5px;\n    color: #333;\n  }\n\n  .event p {\n    margin: 0;\n    color: #555;\n  }\n</style>\n","<script>\n  import ComposerEvents from \"./ComposerEvents.svelte\";\n  import YearWorldEvents from \"./YearWorldEvents.svelte\";\n  export let dataByYearToDisplay;\n\n  let showLifeEvents = true;\n  let showWorks = true;\n  let showWorldEvents = true;\n</script>\n\n<div class=\"year-by-year-display\">\n  <div class=\"checkbox-container\">\n    <input type=\"checkbox\" id=\"life-events\" bind:checked={showLifeEvents} />\n    <label for=\"life-events\">Life events</label>\n\n    <input type=\"checkbox\" id=\"works\" bind:checked={showWorks} />\n    <label for=\"works\">Works</label>\n\n    <input type=\"checkbox\" id=\"world-events\" bind:checked={showWorldEvents} />\n    <label for=\"world-events\">World events</label>\n  </div>\n  {#each dataByYearToDisplay as yearData}\n    <h2>{yearData.year}</h2>\n    {#each yearData.selectedComposers as composerData}\n      <ComposerEvents {composerData} {showWorks} {showLifeEvents} />\n    {/each}\n    {#if showWorldEvents}\n      <YearWorldEvents events={yearData.worldEvents} />\n    {/if}\n  {/each}\n</div>\n\n<style>\n  textarea,\n  select,\n  input {\n    margin-left: 1em;\n    background-color: var(--bg);\n    border: 1px solid grey;\n  }\n\n  .checkbox-container {\n    margin-top: 1em;\n  }\n</style>\n","<div class=\"About\">\n  <p>\n    This web app displays timelines of events and works for selected composers.\n    Ever wondered what Haydn was about when Mozart composed his first symphony,\n    what Wagner was brewing when Bizet released Carmen, or what was happening in\n    the world the year Chopin released his Etudes? This app is for you!\n  </p>\n  <p>\n    The events were collected and summarized by ChatGPT (read more <a>here</a>!)\n    and yes, they can be janky at times, but overall I found them pretty useful.\n    The compositions (and links to PDFs) are scraped from IMSLP, so only works\n    in the public domain are referenced. >.\n  </p>\n  <p>\n    Go to <a>the project's Github page</a> to learn more about the project and how\n    to add/request other composers.\n  </p>\n</div>\n\n<style>\n  .About {\n    margin-top: 3em;\n  }\n</style>\n","<script>\n  import { onMount } from \"svelte\";\n  import ComposerSelector from \"./components/ComposerSelector.svelte\";\n  import YearByYearDisplay from \"./components/YearByYearDisplay.svelte\";\n  import About from \"./components/About.svelte\";\n\n  let composerListWithMetadata = [];\n  let selectedComposers = [];\n  let composerData = {};\n  let worldEvents = {};\n\n  let dataByYearToDisplay = [];\n\n  $: {\n    // compute the years to display information for\n    let yearsSet = new Set();\n    selectedComposers\n      .filter((c) => composerData[c])\n      .forEach((composer) => {\n        composerData[composer].events.forEach((event) =>\n          yearsSet.add(event.year)\n        );\n        composerData[composer].compositions.forEach((composition) =>\n          yearsSet.add(composition.year)\n        );\n      });\n    let yearsToDisplay = Array.from(yearsSet)\n      .filter((year) => year)\n      .sort((a, b) => a - b);\n\n    // compute the data to be displayed\n    dataByYearToDisplay = yearsToDisplay.map((year) => ({\n      year,\n      worldEvents: worldEvents[year],\n      selectedComposers: selectedComposers\n        .filter((c) => composerData[c])\n        .map((composer) => ({\n          full_name: composer,\n          last_name: composerData[composer].last_name,\n          wikipedia_url: composerData[composer].wikipedia_url,\n          events: composerData[composer].events.filter(\n            (event) => event.year === year\n          ),\n          compositions: composerData[composer].compositions.filter(\n            (composition) => composition.year === year\n          ),\n        })),\n    }));\n  }\n\n  onMount(async () => {\n    const composerListResponse = await fetch(\n      \"/data/composer_list_with_metadata.json\"\n    );\n    composerListWithMetadata = await composerListResponse.json();\n\n    const worldEventsResponse = await fetch(\"/data/year_world_events.json\");\n    worldEvents = await worldEventsResponse.json();\n  });\n\n  async function handleSelection(event) {\n    selectedComposers = event.detail;\n    for (const composer of selectedComposers) {\n      if (!composerData[composer]) {\n        const response = await fetch(`/data/composer_data/${composer}.json`);\n        const data = await response.json();\n        composerData = { ...composerData, [composer]: data };\n      }\n    }\n  }\n\n  function handleUnselect(event) {\n    selectedComposers = selectedComposers.filter((e) => e != event.detail);\n  }\n</script>\n\n<main>\n  <h1>Composer Timelines</h1>\n  <ComposerSelector\n    {composerListWithMetadata}\n    on:selectionChange={handleSelection}\n    on:unselected={handleUnselect}\n  />\n  <YearByYearDisplay {dataByYearToDisplay} />\n  <About />\n</main>\n\n<style>\n  /* Add your styles here for a modern look */\n  h1 {\n    text-align: center;\n    margin-bottom: 1em;\n  }\n  main {\n    font-family: \"Lato\", sans-serif !important;\n    margin: 0;\n    padding: 0;\n  }\n  :root,\n  ::backdrop {\n    --border: initial !important;\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","stop_propagation","stopPropagation","attr","attribute","value","removeAttribute","getAttribute","setAttribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","indexOf","set_data","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","defaultPrevented","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","seen_callbacks","Set","flushidx","saved_component","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","filtered","targets","flush_render_callbacks","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","splice","$set","$$props","obj","$$set","keys","min","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getOppositeAlignmentPlacement","replace","alignment","getOppositePlacement","side","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","padding","paddingObject","expandPaddingObject","getPaddingObject","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getNodeName","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflow","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isTopLayer","some","selector","matches","isContainingBlock","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","result","assignedSlot","host","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","concat","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","currentNode","getContainingBlock","topLayer","elementClippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingElementAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","isRTL","autoUpdate","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","passive","cleanupIo","onMove","timeoutId","io","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","offset","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","shift","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","flip","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","placements","overflows","overflowsData","sides","mainAlignmentSide","getAlignmentSides","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","reset","resetPlacement","sort","_overflowsData$filter2","currentSideAxis","acc","computePosition","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition$1","createFloatingActions","initOptions","referenceElement","floatingElement","defaultOptions","getOptions","mixin","updatePosition","updateOptions","onComputed","setupVirtualElementObserver","subscribe","$node","contentOptions","autoUpdateDestroy","destroyAutoUpdate","initAutoUpdate","_autoUpdate","loadOptions","filterText","items","multiple","itemId","groupBy","filterSelectedItems","itemFilter","convertStringItemsToObjects","filterGroupedItems","label","filterResults","item","matchesFilter","getItems","dispatch","res","catch","err","console","warn","details","cancelled","filteredItems","loading","focused","listOpen","svg","path","circle","if_block0","create_if_block_13","if_block2","create_if_block_9","div","each_blocks","t_value","t","div0","groupHeader","groupItem","selectable","div1","listDom","span0","span1","ClearIcon","create_if_block_6","span","button","select","create_if_block_8","create_if_block_7","create_if_block_4","create_if_block_3","create_if_block_2","create_if_block_1","JSON","stringify","input_1","if_block6","create_if_block","div3","div2","levels","updates","to_null_out","accounted_for","n","readOnly","input_1_readonly_value","_items","slots","justValue","_filter","_getItems","id","container","multiFullItemClearable","disabled","placeholder","placeholderAlwaysShow","option","groupFilter","groups","groupHeaderSelectable","containerStyles","hasError","required","closeListOnChange","clearFilterTextOnBlur","createGroupHeaderItem","groupValue","timeout","activeValue","prev_value","prev_filterText","prev_multiple","_inputAttributes","searchable","inputStyles","clearable","debounce","wait","debounceWait","hideEmptyState","inputAttributes","listAutoWidth","showChevron","listOffset","hoverItemIndex","floatingConfig","class","containerClasses","groupValues","sortedGroupedItems","checkHoverSelectable","startingIndex","ignoreGroup","$$invalidate","setHoverIndex","checkValueForDuplicates","noDuplicates","ids","uniqueValues","val","findItem","selection","matchTo","find","handleMultiItemClear","itemToRemove","handleFocus","activeElement","focus","handleBlur","isScrolling","closeList","blur","ariaValues","values","ariaListOpen","count","ariaFocused","isScrollingTimer","handleListScroll","remove","handleSelect","itemSelected","handleHover","handleItemClick","args","hasOwnProperty","isItemSelectable","increment","hasOwn","hover","activeScroll","scrollAction","hoverScroll","scrollIntoView","behavior","_floatingConfig","floatingRef","floatingContent","floatingUpdate","prefloat","isArray","setValue","autocapitalize","autocomplete","autocorrect","spellcheck","tabindex","findIndex","hasValue","hideSelectedItem","showClear","placeholderText","ariaSelection","_multiple","selected","join","handleAriaSelection","ariaContext","_item","handleAriaContent","updateValueDisplay","handleFilterEvent","listMounted","setListWidth","scrollToHoverItem","hoverItem","contains","$$value","func","func_1","composer","last_name","first_names","full_name","composerListWithMetadata","handleChange","selectedOptions","selectedComposers","handleUnselect","unselected","t1_value","a_href_value","wikipedia_url","h3","t1","each_value_1","events","ul","t0_value","t2_value","city","t4_value","country","t7_value","summary","li","t0","t2","t4","t7","each_value","compositions","title","a0","a0_href_value","imslp_url","a1","a1_href_value","i0","i1","composerData","showWorks","showLifeEvents","composition","encodeURIComponent","year","worldEvents","yearworldevents_changes","h2","current","input0","label0","input1","label1","input2","label2","dataByYearToDisplay","showWorldEvents","checked","main","h1","composerListResponse","fetch","json","worldEventsResponse","yearsSet","yearsToDisplay","response"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}